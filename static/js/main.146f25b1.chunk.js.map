{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","nextPlayer","stepNumber","slice","current","length","calculateWinner","setState","concat","step","status","winner","moves","map","move","description","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"wOAIA,SAASA,EAAOC,GACZ,OACI,wBAAQC,UAAU,SAASC,QAAS,kBAAMF,EAAME,WAAhD,SACKF,EAAMG,Q,IAKbC,E,kKAEF,SAAaC,GAAI,IAAD,OACZ,OAAO,cAACN,EAAD,CAAQI,MAAOG,KAAKN,MAAMO,QAAQF,GAAIH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,Q,oBAGnF,WACI,OACI,gCACI,sBAAKJ,UAAU,YAAf,UACKK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAEvB,sBAAKP,UAAU,YAAf,UACKK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAEvB,sBAAKP,UAAU,YAAf,UACKK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,a,GAtBnBC,IAAMC,WA6BpBC,E,kDACF,WAAYX,GAAQ,IAAD,8BACf,cAAMA,IACDY,MAAQ,CACTC,QAAS,CAAC,CAACN,QAASO,MAAM,GAAGC,KAAK,QAClCC,WAAY,IACZC,WAAY,GALD,E,+CASnB,SAAYZ,GACR,IAAMQ,EAAUP,KAAKM,MAAMC,QAAQK,MAAM,EAAGZ,KAAKM,MAAMK,WAAa,GAC9DE,EAAUN,EAAQA,EAAQO,OAAS,GACzC,IAAID,EAAQZ,QAAQF,KAAMgB,EAAgBF,EAAQZ,SAAlD,CAGA,IAAMA,EAAUY,EAAQZ,QAAQW,QAChCX,EAAQF,GAAKC,KAAKM,MAAMI,WACxBV,KAAKgB,SAAS,CACVT,QAASA,EAAQU,OAAO,CAAC,CAAChB,QAASA,KACnCU,WAAYJ,EAAQO,OACpBJ,WAAsC,MAA1BV,KAAKM,MAAMI,WAAqB,IAAM,S,oBAI1D,SAAOQ,GACHlB,KAAKgB,SAAS,CACVL,WAAYO,EACZR,WAAaQ,EAAO,IAAO,EAAI,IAAM,Q,oBAI7C,WAAU,IAIFC,EAJC,OACCZ,EAAUP,KAAKM,MAAMC,QACrBM,EAAUN,EAAQP,KAAKM,MAAMK,YAC/BS,EAASL,EAAgBF,EAAQZ,SAGjCkB,EADAC,EACS,WAAaA,EAEb,gBAAkBpB,KAAKM,MAAMI,WAE1C,IAAMW,EAAQd,EAAQe,KAAI,SAACJ,EAAMK,GAC7B,IAAMC,EAAuB,IAATD,EAChB,mBACA,cAAgBA,EACpB,OACI,6BACI,wBAAQ3B,QAAS,kBAAM,EAAK6B,OAAOF,IAAnC,SAA2CC,KADtCD,MAKjB,OACI,sBAAK5B,UAAU,OAAf,UACI,qBAAKA,UAAU,aAAf,SACI,cAACG,EAAD,CAAOG,QAASY,EAAQZ,QAASL,QAAS,SAACG,GAAD,OAAO,EAAK2B,YAAY3B,QAEtE,sBAAKJ,UAAU,YAAf,UACI,8BAAMwB,IACN,6BAAKE,c,GA3DNlB,IAAMC,WAyEzB,SAASW,EAAgBd,GAWrB,IAVA,IAAM0B,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEF5B,EAAI,EAAGA,EAAI4B,EAAMb,OAAQf,IAAK,CACnC,kBAAkB4B,EAAM5B,GAAxB,GAAO6B,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAI7B,EAAQ2B,IAAM3B,EAAQ2B,KAAO3B,EAAQ4B,IAAM5B,EAAQ2B,KAAO3B,EAAQ6B,GAClE,OAAO7B,EAAQ2B,GAGvB,OAAO,KAtBXG,IAASC,OACL,cAAC3B,EAAD,IACA4B,SAASC,eAAe,W","file":"static/js/main.146f25b1.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n    return (\n        <button className=\"square\" onClick={() => props.onClick()}>\n            {props.value}\n        </button>\n    );\n}\n\nclass Board extends React.Component {\n\n    renderSquare(i) {\n        return <Square value={this.props.squares[i]} onClick={() => this.props.onClick(i)}/>;\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"board-row\">\n                    {this.renderSquare(0)}\n                    {this.renderSquare(1)}\n                    {this.renderSquare(2)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(3)}\n                    {this.renderSquare(4)}\n                    {this.renderSquare(5)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(6)}\n                    {this.renderSquare(7)}\n                    {this.renderSquare(8)}\n                </div>\n            </div>\n        );\n    }\n}\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            history: [{squares: Array(9).fill(null)}],\n            nextPlayer: 'X',\n            stepNumber: 0,\n        };\n    }\n\n    handleClick(i) {\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\n        const current = history[history.length - 1];\n        if (current.squares[i] || calculateWinner(current.squares)) {\n            return;\n        }\n        const squares = current.squares.slice();\n        squares[i] = this.state.nextPlayer;\n        this.setState({\n            history: history.concat([{squares: squares}]),\n            stepNumber: history.length,\n            nextPlayer: this.state.nextPlayer === 'X' ? 'O' : 'X',\n        });\n    }\n\n    jumpTo(step) {\n        this.setState({\n            stepNumber: step,\n            nextPlayer: (step % 2) === 0 ? 'X' : 'O',\n        })\n    }\n\n    render() {\n        const history = this.state.history;\n        const current = history[this.state.stepNumber];\n        let winner = calculateWinner(current.squares);\n        let status;\n        if (winner) {\n            status = 'Winner: ' + winner;\n        } else {\n            status = 'Next player: ' + this.state.nextPlayer;\n        }\n        const moves = history.map((step, move) => {\n            const description = move === 0 ?\n                'Go to game start' :\n                'Go to move#' + move;\n            return (\n                <li key={move}>\n                    <button onClick={() => this.jumpTo(move)}>{description}</button>\n                </li>\n            );\n        })\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board squares={current.squares} onClick={(i) => this.handleClick(i)}/>\n                </div>\n                <div className=\"game-info\">\n                    <div>{status}</div>\n                    <ol>{moves}</ol>\n                </div>\n            </div>\n        );\n    }\n}\n\n// ========================================\n\nReactDOM.render(\n    <Game/>,\n    document.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            return squares[a];\n        }\n    }\n    return null;\n}"],"sourceRoot":""}